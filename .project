PSOC_Arduino_Support=~/PSoC_Creator/Arduino_Support CD=. filter="NULL"{
 Bootloader=Bootloader.cydsn filter="*.h *.c *.cpp" {
  device.h
  main.c
   Generated=Generated_Source/PSoC5 filter="NULL" {
    Headers=. filter="*.h" {
    Bootloader.h
    Bootloader_PVT.h
    Clock.h
    Clock_2.h
    core_cm3.h
    core_cm3_psoc5.h
    core_cmFunc.h
    core_cmInstr.h
    cydevice.h
    cydevice_trm.h
    cydisabledsheets.h
    CyDmac.h
    cyfitter.h
    cyfitter_cfg.h
    CyFlash.h
    CyLib.h
    cypins.h
    cyPm.h
    CySpc.h
    cytypes.h
    flashWriteStatusPin.h
    flashWriteStatusPin_aliases.h
    Pin_LED.h
    Pin_LED_aliases.h
    Project.h
    PWM.h
    receiveStartPin.h
    receiveStartPin_aliases.h
    ResetCounter.h
    Reset_Timer.h
    transmitStatusPin.h
    transmitStatusPin_aliases.h
    UART.h
    UART_IntClock.h
    USBUART.h
    USBUART_audio.h
    USBUART_cdc.h
    USBUART_Dm.h
    USBUART_Dm_aliases.h
    USBUART_Dp.h
    USBUART_Dp_aliases.h
    USBUART_hid.h
    USBUART_midi.h
    USBUART_pvt.h
    }
    Source=. filter="*.cpp *.c"{
    Bootloader.c
    Clock.c
    Clock_2.c
    Cm3Start.c
    CyDmac.c
    cyfitter_cfg.c
    CyFlash.c
    CyLib.c
    cymetadata.c
    cyPm.c
    CySpc.c
    cyutils.c
    flashWriteStatusPin.c
    Pin_LED.c
    PWM.c
    PWM_PM.c
    receiveStartPin.c
    ResetCounter.c
    ResetCounter_PM.c
    Reset_Timer.c
    Reset_Timer_PM.c
    transmitStatusPin.c
    UART.c
    UART_BOOT.c
    UART_INT.c
    UART_IntClock.c
    UART_PM.c
    USBUART.c
    USBUART_audio.c
    USBUART_boot.c
    USBUART_cdc.c
    USBUART_cls.c
    USBUART_descr.c
    USBUART_Dm.c
    USBUART_Dp.c
    USBUART_drv.c
    USBUART_episr.c
    USBUART_hid.c
    USBUART_midi.c
    USBUART_pm.c
    USBUART_std.c
    USBUART_vnd.c
    }
   }
   Bootloader=Bootloader_v1_30/PSoC5/API filter="*.h *.c *.cpp"{
   Bootloader.h
   Bootloader_PVT.h
   Bootloader.c
   }
 }
 Uno=Uno_blocks.cydsn filter="*.h *.c *.cpp" {
  main.cpp
  sketch.cpp
   Core=core filter="NULL"{
     Headers=. filter="*.h" {
    Arduino.h
    Arduino_Advanced_IO.h
    Arduino_Analog_In.h
    Arduino_Analog_Out.h
    Arduino_Extended_IO.h
    Arduino_HW_Interrupt.h
    Arduino_Pins.h
    Arduino_Random.h
    Arduino_Serial.h
    Arduino_Time.h
    Arduino_Tone.h
    binary.h
    Client.h
    HardwareSerial.h
    IPAddress.h
    itoa.h
    Print.h
    Printable.h
    Server.h
    Stream.h
    UARTClass.h
    Udp.h
    WString.h
     }
     Source=. filter="*.cpp *.c"{
    Arduino_Advanced_IO.cpp
    Arduino_Analog_In.cpp
    Arduino_Analog_Out.cpp
    Arduino_HW_Interrupt.cpp
    Arduino_Math.cpp
    Arduino_Pins.cpp
    Arduino_Random.cpp
    Arduino_Serial.cpp
    Arduino_Time.cpp
    Arduino_Tone.cpp
    IPAddress.cpp
    Print.cpp
    Stream.cpp
    UARTClass.cpp
    WString.cpp
    itoa.c
     }
     AVR=avr filter="*.h *.cpp *.c" {
    dtostrf.h
    pgmspace.h
    dtostrf.c
     }
   }
   Libraries=Libraries filter="NULL"{
    Servo=Servo filter="*.h *.cpp *.c"{
    Servo.h
    Servo.cpp
    }
    SPI=SPI filter="*.h *.cpp *.c"{
    SPI.h
    SPI.cpp
    }
    Wire=Wire filter="*.h *.cpp *.c"{
    Arduino_I2C.h
    Wire.h
    Arduino_I2C.cpp
    }  
    WS281x=WS281x filter="*.h *.cpp *.c"{
    WS281x.h
    WS281x.cpp
    }  
 }
   Generated=Generated_Source/PSoC5 filter="NULL"{
    Headers=. filter="*.h" {
    A0.h
    A0_aliases.h
    A1.h
    A1_aliases.h
    A2.h
    A2_aliases.h
    A3.h
    A3_aliases.h
    A4.h
    A4_aliases.h
    A5.h
    A5_aliases.h
    ADC.h
    ADC_Bypass.h
    ADC_Bypass_aliases.h
    ADC_IRQ.h
    ADC_Mux.h
    ADC_theACLK.h
    A_aliases.h
    Bootloadable.h
    BootloaderResetInterrupt.h
    BootloaderResetTimer.h
    Clock_12.h
    Clock_2.h
    Clock_3.h
    core_cm3.h
    core_cm3_psoc5.h
    core_cmFunc.h
    core_cmInstr.h
    cydevice.h
    cydevice_trm.h
    cydisabledsheets.h
    CyDmac.h
    cyfitter.h
    cyfitter_cfg.h
    CyFlash.h
    CyLib.h
    cypins.h
    cyPm.h
    CySpc.h
    cytypes.h
    D0.h
    D0_aliases.h
    D1.h
    D10.h
    D10_aliases.h
    D10_Ctrl.h
    D11.h
    D11_aliases.h
    D11_Ctrl.h
    D12.h
    D12_aliases.h
    D13.h
    D13_aliases.h
    D1_aliases.h
    D2.h
    D2_aliases.h
    D3.h
    D3_aliases.h
    D4.h
    D4_aliases.h
    D5.h
    D5_aliases.h
    D6.h
    D6_aliases.h
    D7.h
    D7_aliases.h
    D8.h
    D8_aliases.h
    D9.h
    D9_aliases.h
    DA.h
    DA_aliases.h
    DB_aliases.h
    HW_INT.h
    I2C.h
    I2C_Enable.h
    I2C_PVT.h
    Micros_Counter.h
    Millis_Counter.h
    P0_aliases.h
    P12_aliases.h
    P3_aliases.h
    P4_aliases.h
    P5_aliases.h
    project.h
    PRS.h
    PWM_1.h
    PWM_2.h
    PWM_3.h
    ServoCounter.h
    ServoInterrupt.h
    SPIM.h
    SPIM_1.h
    SPIM_1_PVT.h
    SPIM_PVT.h
    SPI_Clock_In.h
    SPI_Mode_Reg.h
    SPI_SS_Stretch.h
    Timer1.h
    timer_clock.h
    ToneTimer.h
    Tone_Interrupt.h
    UART.h
    UART_Clock.h
    USBUART.h
    USBUART_audio.h
    USBUART_cdc.h
    USBUART_Dm.h
    USBUART_Dm_aliases.h
    USBUART_Dp.h
    USBUART_Dp_aliases.h
    USBUART_hid.h
    USBUART_midi.h
    USBUART_pvt.h
    UserButton.h
    UserButton_aliases.h
    }
    Source=. filter="*.cpp *.c"{
    A0.c
    A1.c
    A2.c
    A3.c
    A4.c
    A5.c
    ADC.c
    ADC_Bypass.c
    ADC_INT.c
    ADC_IRQ.c
    ADC_Mux.c
    ADC_PM.c
    ADC_theACLK.c
    Bootloadable.c
    BootloaderResetInterrupt.c
    BootloaderResetTimer.c
    BootloaderResetTimer_PM.c
    Clock_12.c
    Clock_2.c
    Clock_3.c
    Cm3Start.c
    cybootloader.c
    CyDmac.c
    cyfitter_cfg.c
    CyFlash.c
    CyLib.c
    cymetadata.c
    cyPm.c
    CySpc.c
    cyutils.c
    D0.c
    D1.c
    D10.c
    D10_Ctrl.c
    D10_Ctrl_PM.c
    D11.c
    D11_Ctrl.c
    D11_Ctrl_PM.c
    D12.c
    D13.c
    D2.c
    D3.c
    D4.c
    D5.c
    D6.c
    D7.c
    D8.c
    D9.c
    DA.c
    HW_INT.c
    I2C.c
    I2C_BOOT.c
    I2C_Enable.c
    I2C_Enable_PM.c
    I2C_INT.c
    I2C_MASTER.c
    I2C_PM.c
    I2C_SLAVE.c
    Micros_Counter.c
    Micros_Counter_PM.c
    Millis_Counter.c
    Millis_Counter_PM.c
    PRS.c
    PRS_PM.c
    PWM_1.c
    PWM_1_PM.c
    PWM_2.c
    PWM_2_PM.c
    PWM_3.c
    PWM_3_PM.c
    ServoCounter.c
    ServoCounter_PM.c
    ServoInterrupt.c
    SPIM.c
    SPIM_1.c
    SPIM_1_INT.c
    SPIM_1_PM.c
    SPIM_INT.c
    SPIM_PM.c
    SPI_Clock_In.c
    SPI_MODE_REG.c
    SPI_MODE_REG_PM.c
    SPI_SS_Stretch.c
    SPI_SS_Stretch_PM.c
    Timer1.c
    Timer1_PM.c
    timer_clock.c
    ToneTimer.c
    ToneTimer_PM.c
    Tone_Interrupt.c
    UART.c
    UART_BOOT.c
    UART_Clock.c
    UART_INT.c
    UART_PM.c
    USBUART.c
    USBUART_audio.c
    USBUART_boot.c
    USBUART_cdc.c
    USBUART_cls.c
    USBUART_descr.c
    USBUART_Dm.c
    USBUART_Dp.c
    USBUART_drv.c
    USBUART_episr.c
    USBUART_hid.c
    USBUART_midi.c
    USBUART_pm.c
    USBUART_std.c
    USBUART_vnd.c
    UserButton.c
    }
   }
 }
}
